/*!
 * MindPlus
 * mpython
 *
 */
#include <MPython.h>
#include <DFRobot_Iot.h>
#include <mPython_tinywebdb.h>
#include <DFRobot_HuskyLens.h>
// 静态常量
const String topics[5] = {"9PhuhMFMR","","","",""};
// 创建对象
DFRobot_Iot       myIot;
mPython_TinyWebDB mydb;
DFRobot_HuskyLens huskylens;


// 主程序开始
void setup() {
	mPython.begin();
	myIot.wifiConnect("Snoopy", "s20000113");
	while (!myIot.wifiStatus()) {yield();}
	display.setCursorLine(1);
	display.printLine(myIot.getWiFiLocalIP());
	myIot.init("iot.dfrobot.com.cn","gD2uhGKMR","","gDhXhMFGgz",topics,1883);
	myIot.connect();
	while (!myIot.connected()) {yield();}
	display.setCursorLine(3);
	display.printLine("MQTT连接成功");
	mydb.setServerParameter("http://tinywebdb.appinventor.space/api", "s12345","0f087c10");
	huskylens.beginI2CUntilSuccess();
	huskylens.writeAlgorithm(ALGORITHM_FACE_RECOGNITION);
}
void loop() {
	huskylens.request();
	if (huskylens.isAppearDirect(HUSKYLENSResultBlock)) {
		myIot.publish(topic_0, "人脸识别成功");
		if (huskylens.isAppear(1,HUSKYLENSResultBlock)) {
			display.setCursorLine(2);
			display.printLine(mydb.getTag("1"));
			rgb.write(0, 0x0000FF);
			myIot.publish(topic_0, mydb.getTag("1"));
		}
		else {
			if (huskylens.isAppear(3,HUSKYLENSResultBlock)) {
				display.setCursorLine(2);
				display.printLine(mydb.getTag("3"));
				rgb.write(0, 0x00FF00);
				myIot.publish(topic_0, mydb.getTag("3"));
			}
			else {
				if (huskylens.isAppear(2,HUSKYLENSResultBlock)) {
					display.setCursorLine(2);
					display.printLine(mydb.getTag("2"));
					rgb.write(0, 0xFF6666);
					myIot.publish(topic_0, mydb.getTag("2"));
				}
				else {
					rgb.write(0, 0xFFFFFF);
					display.setCursorLine(2);
					display.printLine("人脸识别未录入或未对准人脸！");
					myIot.publish(topic_0, "人脸识别未录入或未对准人脸！");
				}
			}
		}
	}
}
